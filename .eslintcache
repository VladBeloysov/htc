[{"D:\\web\\htc\\src\\index.jsx":"1","D:\\web\\htc\\src\\reportWebVitals.js":"2","D:\\web\\htc\\src\\store\\store.js":"3","D:\\web\\htc\\src\\components\\app\\app.jsx":"4","D:\\web\\htc\\src\\store\\reducers\\index.js":"5","D:\\web\\htc\\src\\components\\header\\header.jsx":"6","D:\\web\\htc\\src\\components\\logo\\logo.jsx":"7","D:\\web\\htc\\src\\components\\search\\search.jsx":"8","D:\\web\\htc\\src\\components\\auth-btn\\auth-btn.jsx":"9","D:\\web\\htc\\src\\constants\\routes.js":"10","D:\\web\\htc\\src\\components\\icon\\icon.jsx":"11","D:\\web\\htc\\src\\components\\footer\\footer.jsx":"12","D:\\web\\htc\\src\\components\\page-main\\page-main.jsx":"13","D:\\web\\htc\\src\\components\\page-error\\page-error.jsx":"14","D:\\web\\htc\\src\\components\\page-detail\\page-detail.jsx":"15","D:\\web\\htc\\src\\components\\tabs-menu\\tabs-menu.jsx":"16","D:\\web\\htc\\src\\components\\tabs-content\\tabs-content.jsx":"17","D:\\web\\htc\\src\\components\\films\\films.jsx":"18","D:\\web\\htc\\src\\components\\channels\\channels.jsx":"19","D:\\web\\htc\\src\\components\\slider-films-new\\slider-films-new.jsx":"20","D:\\web\\htc\\src\\components\\slider-films-genre\\slider-films-genre.jsx":"21","D:\\web\\htc\\src\\lib\\slider\\slider.js":"22","D:\\web\\htc\\src\\components\\film-card\\film-card.jsx":"23","D:\\web\\htc\\src\\components\\comments\\comments.jsx":"24","D:\\web\\htc\\src\\components\\modal-login\\modal-login.jsx":"25","D:\\web\\htc\\src\\store\\actions\\index.js":"26","D:\\web\\htc\\src\\constants\\actions.js":"27","D:\\web\\htc\\src\\constants\\locale\\ru.js":"28","D:\\web\\htc\\src\\components\\page-genre\\page-genre.jsx":"29","D:\\web\\htc\\src\\components\\login\\login.jsx":"30"},{"size":963,"mtime":1609270813229,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1606829632174,"results":"33","hashOfConfig":"32"},{"size":13930,"mtime":1610037010578,"results":"34","hashOfConfig":"32"},{"size":4983,"mtime":1610043404424,"results":"35","hashOfConfig":"32"},{"size":1989,"mtime":1610036638289,"results":"36","hashOfConfig":"32"},{"size":1603,"mtime":1610043309482,"results":"37","hashOfConfig":"32"},{"size":714,"mtime":1610044282735,"results":"38","hashOfConfig":"32"},{"size":1151,"mtime":1610044910218,"results":"39","hashOfConfig":"32"},{"size":674,"mtime":1610041522884,"results":"40","hashOfConfig":"32"},{"size":165,"mtime":1608974502851,"results":"41","hashOfConfig":"32"},{"size":679,"mtime":1610045119569,"results":"42","hashOfConfig":"32"},{"size":1099,"mtime":1609248029451,"results":"43","hashOfConfig":"32"},{"size":1339,"mtime":1610044815537,"results":"44","hashOfConfig":"32"},{"size":704,"mtime":1608758995829,"results":"45","hashOfConfig":"32"},{"size":1956,"mtime":1610044376779,"results":"46","hashOfConfig":"32"},{"size":1043,"mtime":1608760044985,"results":"47","hashOfConfig":"32"},{"size":768,"mtime":1610035573397,"results":"48","hashOfConfig":"32"},{"size":1245,"mtime":1610042710576,"results":"49","hashOfConfig":"32"},{"size":11450,"mtime":1610041959918,"results":"50","hashOfConfig":"32"},{"size":3209,"mtime":1610045026054,"results":"51","hashOfConfig":"32"},{"size":1606,"mtime":1610044949820,"results":"52","hashOfConfig":"32"},{"size":3894,"mtime":1610224054734,"results":"53","hashOfConfig":"32"},{"size":1464,"mtime":1610045181541,"results":"54","hashOfConfig":"32"},{"size":3369,"mtime":1610045204418,"results":"55","hashOfConfig":"32"},{"size":2645,"mtime":1610044315177,"results":"56","hashOfConfig":"32"},{"size":1033,"mtime":1610036627338,"results":"57","hashOfConfig":"32"},{"size":461,"mtime":1609321236128,"results":"58","hashOfConfig":"32"},{"size":167,"mtime":1608918354838,"results":"59","hashOfConfig":"32"},{"size":2899,"mtime":1610044561290,"results":"60","hashOfConfig":"32"},{"size":1636,"mtime":1610044090829,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"1xojor3",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"65"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"65"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"65"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"65"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"65"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"D:\\web\\htc\\src\\index.jsx",["132"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/app/app';\nimport { configureStore } from './store/store';\nimport './constants/constants.scss';\nimport './constants/fonts.scss';\nimport {createStore} from \"redux\";\n\nconst store = configureStore();\nconst saveState = (state) => {\n    try {\n        const serialisedState = JSON.stringify(state);\n        window.localStorage.setItem('app_state', serialisedState);\n    } catch (err) {\n        // Log errors here, or ignore\n    }\n};\nstore.subscribe(() => {\n    saveState(store.getState());\n});\n\n\nconst Application = () => (\n    <Provider store={ store }>\n        <BrowserRouter basename='/'>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nconst renderApplication = () => {\n    ReactDOM.render(<Application/>, document.getElementById('react-app'));\n}\n\nrenderApplication();",["133","134"],"D:\\web\\htc\\src\\reportWebVitals.js",[],"D:\\web\\htc\\src\\store\\store.js",[],"D:\\web\\htc\\src\\components\\app\\app.jsx",[],"D:\\web\\htc\\src\\store\\reducers\\index.js",["135","136","137"],"import {\r\n    ACTIONS_AUTHORIZATION_USER,\r\n    ACTIONS_MESSAGE_ERROR,\r\n    ACTIONS_ADD_COMMENT,\r\n    ACTIONS_DELETE_COMMENT,\r\n    ACTIONS_ADD_SEARCH_STR,\r\n    ACTIONS_EDIT_NAME_USER\r\n} from '../../constants/actions';\r\n\r\nexport default function (state = {}, { type, payload }) {\r\n    switch (type) {\r\n        case ACTIONS_AUTHORIZATION_USER: {\r\n            return {\r\n                ...state,\r\n                currentUser: payload\r\n            };\r\n        }\r\n\r\n        case ACTIONS_MESSAGE_ERROR: {\r\n            return {\r\n                ...state,\r\n                messageError: payload\r\n            };\r\n        }\r\n\r\n        case ACTIONS_ADD_COMMENT: {\r\n            const { filmId, userId, text } = payload;\r\n            let max = 0;\r\n            state.comments.map(item => {\r\n                if(item.id > max) max = item.id;\r\n            });\r\n            let id = ++max;\r\n            return {\r\n                ...state,\r\n                comments: [\r\n                    ...state.comments,\r\n                    {\r\n                        id,\r\n                        filmId,\r\n                        userId,\r\n                        text\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n\r\n        case ACTIONS_DELETE_COMMENT: {\r\n            return {\r\n                ...state,\r\n                comments: state.comments.filter(item => item.id !== Number.parseInt(payload))\r\n            };\r\n        }\r\n\r\n        case ACTIONS_ADD_SEARCH_STR: {\r\n            return {\r\n                ...state,\r\n                searchStr: payload\r\n            };\r\n        }\r\n\r\n        case ACTIONS_EDIT_NAME_USER: {\r\n            const newUsers = state.users;\r\n            newUsers.map(item => {\r\n                if(item.id === state.currentUser) {\r\n                    item.name = payload;\r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                users: newUsers\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\web\\htc\\src\\components\\header\\header.jsx",[],"D:\\web\\htc\\src\\components\\logo\\logo.jsx",[],"D:\\web\\htc\\src\\components\\search\\search.jsx",[],"D:\\web\\htc\\src\\components\\auth-btn\\auth-btn.jsx",[],"D:\\web\\htc\\src\\constants\\routes.js",[],"D:\\web\\htc\\src\\components\\icon\\icon.jsx",[],"D:\\web\\htc\\src\\components\\footer\\footer.jsx",["138"],"import React from 'react';\r\nimport { block } from 'bem-cn';\r\nimport './footer.scss';\r\nimport Icon from \"../icon/icon\";\r\n\r\nconst cn = block('footer');\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={ cn() }>\r\n                <div className=\"container\">\r\n                    <Icon\r\n                        name=\"htc-cs-logo\"\r\n                        width=\"33px\"\r\n                        height=\"66px\"\r\n                        className={ cn('icon') }\r\n                    />\r\n                    <div className={ cn('desc') }>\r\n                        <p className={ cn('text') }>426057, Россия, Удмуртская Республика, г. Ижевск, ул. Карла Маркса, 246 (ДК «Металлург»)</p>\r\n                        <p className={ cn('text') }>+7 (3412) 93-88-61, 43-29-29</p>\r\n                        <a href=\"https://htc-cs.ru\" target=\"_blank\" className={ cn('link') }>htc-cs.ru</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","D:\\web\\htc\\src\\components\\page-main\\page-main.jsx",[],"D:\\web\\htc\\src\\components\\page-error\\page-error.jsx",[],"D:\\web\\htc\\src\\components\\page-detail\\page-detail.jsx",[],"D:\\web\\htc\\src\\components\\tabs-menu\\tabs-menu.jsx",["139"],"import React from 'react';\r\nimport { block } from 'bem-cn';\r\nimport './tabs-menu.scss';\r\nimport PropType from \"prop-types\";\r\n\r\nconst cn = block('tabs-menu');\r\nclass TabsMenu extends React.Component {\r\n    static propTypes = {\r\n        tabs: PropType.array.isRequired,\r\n        activeTab: PropType.number,\r\n        onChangeTab: PropType.func.isRequired,\r\n    };\r\n\r\n    static defaultProps = {\r\n        activeTab: 0\r\n    };\r\n\r\n    render() {\r\n        const { tabs, activeTab, onChangeTab } = this.props;\r\n        return (\r\n            <ul className={ cn() }>\r\n                { tabs.map((item, key) =>\r\n                    <li aria-selected={ key === activeTab } role=\"tab\" key={ key } className={ cn('item') }>\r\n                        <a\r\n                            className={ cn('link', { active: key === activeTab }) }\r\n                            onClick={ () => onChangeTab(key) }\r\n                        >{ item }</a>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default TabsMenu;","D:\\web\\htc\\src\\components\\tabs-content\\tabs-content.jsx",[],"D:\\web\\htc\\src\\components\\films\\films.jsx",["140"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { block } from 'bem-cn';\r\nimport SliderFilmsNew from '../slider-films-new/slider-films-new';\r\nimport SliderFilmsGenre from '../slider-films-genre/slider-films-genre';\r\nimport PropType from \"prop-types\";\r\n\r\nconst cn = block('tabs-films');\r\nclass Films extends React.Component {\r\n    static propTypes = {\r\n        films: PropType.arrayOf(PropType.object).isRequired,\r\n        filmsGenre: PropType.arrayOf(PropType.object).isRequired,\r\n        searchStr: PropType.string\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { films, filmsGenre, searchStr } = this.props;\r\n        return (\r\n            <div className={ cn() }>\r\n                <h2 className={ cn('title') }>Новинки</h2>\r\n                <SliderFilmsNew films={ films } searchStr={ searchStr } />\r\n                <h2 className={ cn('title') }>Жанры</h2>\r\n                <SliderFilmsGenre filmsGenre={ filmsGenre } />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { filmsGenre: state.filmsGenre, films: state.films, searchStr: state.searchStr };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Films);","D:\\web\\htc\\src\\components\\channels\\channels.jsx",["141","142","143"],"import React from 'react';\r\nimport { block } from 'bem-cn';\r\nimport './channels.scss';\r\nimport Icon from '../icon/icon';\r\nimport {connect} from \"react-redux\";\r\nimport PropType from \"prop-types\";\r\n\r\nconst cn = block('channels');\r\nclass Channels extends React.Component {\r\n    static propTypes = {\r\n        channels: PropType.arrayOf(PropType.object).isRequired,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    viewport = null;\r\n    content = null;\r\n    viewportHeight = null;\r\n    contentHeight = null;\r\n    max = null;\r\n    ratio = null;\r\n    scrollerHeightMin = null;\r\n    step = null;\r\n    pressed = null;\r\n    scrollBarWidth = null;\r\n    scroller = null;\r\n    scrollerBarHeight = null;\r\n    scrollerMaxOffset = null;\r\n    scrollerContainer = null;\r\n\r\n    init = () => {\r\n        this.scrollBox();\r\n        // если высота контента меньше или равна высоте вьюпорта,\r\n        // выходим из функции\r\n        if (this.viewportHeight >= this.contentHeight) return;\r\n        // формируем полосу прокрутки и ползунок\r\n        // устанавливаем обработчики событий\r\n        this.registerEventsHandler();\r\n    };\r\n\r\n    drop = (e) => {\r\n        e.preventDefault();\r\n        // если кнопка мыши не нажата, прекращаем работу функции\r\n        if (this.pressed === false) return;\r\n\r\n        // величина перемещения мыши\r\n        let shiftScroller = this.start - e.clientY;\r\n        // изменяем положение бегунка на величину перемещения мыши\r\n        this.scrollerBar.style.top = (this.scrollerBar.offsetTop - shiftScroller) + 'px';\r\n\r\n        // ограничиваем перемещение ползунка по верхней границе вьюпорта\r\n        if (this.scrollerBar.offsetTop <= 0) this.scrollerBar.style.top = '0px';\r\n        // ограничиваем перемещение ползунка по нижней границе вьюпорта\r\n        // сумма высоты ползунка и его текущего отступа от верхней границы вьюпорта\r\n        let\ttotalHeight = this.scrollerBar.offsetHeight + this.scrollerBar.offsetTop;\r\n\r\n        if (totalHeight >= this.viewportHeight) this.scrollerBar.style.top = this.scrollerMaxOffset + 'px';\r\n\r\n        // расстояние, на которую должен переместиться контент\r\n        // это расстояние пропорционально смещению ползунка\r\n        let\tshiftContent = this.scrollerBar.offsetTop / this.ratio;\r\n        // прокручиваем контент на величину пропорциональную перемещению ползунка,\r\n        // она имеет обратный знак, т.к. ползунок и контент прокручиваются\r\n        // в противоположных направлениях\r\n        this.scrollerContainer.style.top = -shiftContent + 'px';\r\n\r\n        // устанавливаем координату Y начала движения мыши равной текущей координате Y\r\n        this.start = e.clientY;\r\n    };\r\n\r\n    down = (e) => {\r\n        let dir = 1;\r\n\r\n        if (e.code == 'ArrowUp') {\r\n            dir = 1;\r\n        }\r\n\r\n        if (e.code == 'ArrowDown') {\r\n            dir = -1;\r\n        }\r\n\r\n        let\tstep = 20 * dir;\r\n\r\n        // управляем позиционированием контента\r\n        this.scrollerContainer.style.top = (this.scrollerContainer.offsetTop + step) + 'px';\r\n        // ограничиваем прокручивание контента вверх и вниз\r\n        if (this.scrollerContainer.offsetTop > 0) this.scrollerContainer.style.top = '0px';\r\n        if (this.scrollerContainer.offsetTop < this.max) this.scrollerContainer.style.top = this.max + 'px';\r\n\r\n        // перемещаем ползунок пропорционально прокручиванию контента\r\n        this.scrollerBar.style.top = (-this.scrollerContainer.offsetTop * this.ratio) + 'px';\r\n    };\r\n\r\n    scroll = (e) => {\r\n        e.preventDefault();\r\n\r\n        // направление вращения колёсика мыши\r\n        let dir = -Math.sign(e.deltaY);\r\n        // шаг прокручивания контента, в зависимости от прокручивания\r\n        // колёсика мыши\r\n        let\tstep = (Math.abs(e.deltaY) >= 3) ? this.step * dir : 0;\r\n\r\n        // управляем позиционированием контента\r\n        this.scrollerContainer.style.top = (this.scrollerContainer.offsetTop + step) + 'px';\r\n        // ограничиваем прокручивание контента вверх и вниз\r\n        if (this.scrollerContainer.offsetTop > 0) this.scrollerContainer.style.top = '0px';\r\n        if (this.scrollerContainer.offsetTop < this.max) this.scrollerContainer.style.top = this.max + 'px';\r\n\r\n        // перемещаем ползунок пропорционально прокручиванию контента\r\n        this.scrollerBar.style.top = (-this.scrollerContainer.offsetTop * this.ratio) + 'px';\r\n    };\r\n\r\n    scrollBox() {\r\n        this.scroller = document.getElementById('js-scroller');\r\n        this.scrollBarWidth = this.scroller.offsetWidth - this.scroller.clientWidth;\r\n        // this.scroller.style.paddingRight = this.scrollBarWidth + 'px';\r\n\r\n        // родительский элемент в котором находится контент и скроллбар\r\n        this.viewport = document.getElementById('js-scroller-wrapper');\r\n        this.scrollerBar = document.getElementById('js-scroller-bar');\r\n        this.scrollerContainer = document.getElementById('js-scroller-container');\r\n        // элемент с контентом\r\n        this.content = document.getElementById('js-scroller');\r\n        // высоты полученных элементов\r\n        this.viewportHeight = this.viewport.offsetHeight;\r\n        this.contentHeight = this.content.scrollHeight;\r\n        // возможная максимальная прокрутка контента, имеет отрицательное\r\n        // значение, т.к. контент позиционируется относительно верхнегоjs-scroller-container\r\n        // края вьюпорта и при прокрутке расположен над ним\r\n        this.max = this.viewport.clientHeight - this.contentHeight;\r\n        // соотношение между высотами вьюпорта и контента\r\n        this.ratio = this.viewportHeight / this.contentHeight;\r\n        // минимальная высота ползунка скроллбара\r\n        this.scrollerHeightMin = 25;\r\n        this.scrollerBarHeight = parseInt(this.ratio * this.viewportHeight);\r\n        this.scrollerBarHeight = (this.scrollerBarHeight < this.scrollerHeightMin) ? this.scrollerHeightMin : this.scrollerBarHeight;\r\n        this.scrollerBar.style.height = this.scrollerBarHeight + 'px';\r\n        this.scrollerMaxOffset = this.viewportHeight - this.scrollerBar.offsetHeight;\r\n        // шаг прокручивания контента при наступлении события 'wheel'\r\n        this.step = 30;\r\n        // флаг нажатия на левую кнопку мыши\r\n        this.pressed = false;\r\n    }\r\n\r\n    registerEventsHandler = (e) => {\r\n        // вращение колёсика мыши\r\n        this.scroller.addEventListener('wheel', this.scroll);\r\n\r\n        // нажатие на левую кнопку мыши\r\n        this.scrollerBar.addEventListener('mousedown', e => {\r\n            // координата по оси Y нажатия левой кнопки мыши\r\n            this.start = e.clientY;\r\n            // устанавливаем флаг, информирующий о нажатии левой кнопки мыши\r\n            this.pressed = true;\r\n        });\r\n\r\n        // перемещение мыши\r\n        document.addEventListener('mousemove', this.drop);\r\n        // отпускание левой кнопки мыши\r\n\r\n        //обработка нажатия стрелок на клавиатуре\r\n        document.addEventListener('keydown', this.down);\r\n\r\n        // сбрасываем флаг, информирующий о нажатии левой кнопки мыши\r\n        document.addEventListener('mouseup', () => this.pressed = false);\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.init();\r\n    }\r\n\r\n    render() {\r\n        const { channels } = this.props;\r\n\r\n        return (\r\n            <div className='scroller__wrapper' id='js-scroller-wrapper'>\r\n                <div className='scroller' id='js-scroller'>\r\n                    <section className=\"scroller__container\" id='js-scroller-container'>\r\n                        <div className={ cn() } >\r\n                            <ul className={ cn('list') }>\r\n                                { channels.map((item, key) =>\r\n                                    <li key={ key } className={ cn('item') }>\r\n                                        <div className={ cn('wrap-icon') }>\r\n                                            <Icon\r\n                                                name={ item.nameIco }\r\n                                                width={ item.widthIco }\r\n                                                height={ item.heigthIco }\r\n                                                className={ cn('icon') }\r\n                                            />\r\n                                        </div>\r\n                                        <div className={ cn('teleprogram') }>\r\n                                            <div className={ cn('teleprogram-name') }>{ item.name }</div>\r\n                                            <ul className={ cn('teleprogram-list') }>\r\n                                                { item.teleprogram.map((teleprogramItem, key2) =>\r\n                                                    <li key={ key2 } className={ cn('teleprogram-item') }>\r\n                                                        <span className={ cn('teleprogram-item-time') }>{ teleprogramItem.time }</span>\r\n                                                        <span className={ cn('teleprogram-item-title') }>{ teleprogramItem.title }</span>\r\n                                                    </li>\r\n                                                )}\r\n                                            </ul>\r\n                                        </div>\r\n                                    </li>\r\n                                )}\r\n                            </ul>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n                <div className='scroller__bar-wrap'>\r\n                    <div className='scroller__bar' id=\"js-scroller-bar\"></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { channels: state.channels };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Channels);","D:\\web\\htc\\src\\components\\slider-films-new\\slider-films-new.jsx",[],"D:\\web\\htc\\src\\components\\slider-films-genre\\slider-films-genre.jsx",["144"],"import React from 'react';\r\nimport { block } from 'bem-cn';\r\nimport './slider-films-genre.scss';\r\nimport PropType from \"prop-types\";\r\nimport { SliderCarusel } from \"../../lib/slider/slider\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst cn = block('slider-films-genre');\r\nclass SliderFilmsGenre extends React.Component {\r\n    static propTypes = {\r\n        filmsGenre: PropType.arrayOf(PropType.object).isRequired\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n        new SliderCarusel('js-slider-genre-content', 'js-slider-genre', 'slider-films-genre__item-wrap');\r\n    }\r\n\r\n    render() {\r\n        const { filmsGenre } = this.props;\r\n\r\n        return (\r\n            <div id=\"js-slider-genre\" className='slider-carusel'>\r\n                <div className='slider-conteiner'>\r\n                    <div id=\"js-slider-genre-content\" className='slider-content'>\r\n                        {\r\n                            filmsGenre.map((item, index) =>\r\n                            <Link to={ `/genre/${ item.id }` } className={ cn('item-wrap') } key={ index }>\r\n                                <div className={ cn('item', { style: item.style }) }>\r\n                                    <div className={ cn('smile') }>{ item.smile }</div>\r\n                                    <div className={ cn('title') }>{ item.title }</div>\r\n                                </div>\r\n                            </Link>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SliderFilmsGenre;","D:\\web\\htc\\src\\lib\\slider\\slider.js",["145","146"],"D:\\web\\htc\\src\\components\\film-card\\film-card.jsx",[],"D:\\web\\htc\\src\\components\\comments\\comments.jsx",["147"],"import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport { block } from 'bem-cn';\r\nimport './comments.scss';\r\nimport Icon from \"../icon/icon\";\r\nimport isNil from \"lodash/isNil\";\r\n\r\nconst cn = block('comments');\r\nclass Comments extends React.Component {\r\n    static propTypes = {\r\n        onCommentAdd: PropType.func.isRequired,\r\n        onCommentDelete: PropType.func.isRequired,\r\n        users: PropType.arrayOf(PropType.object).isRequired,\r\n        currentUser: PropType.number,\r\n        text: PropType.string,\r\n        filmId: PropType.string.isRequired,\r\n        comments: PropType.arrayOf(PropType.object).isRequired\r\n    };\r\n\r\n    static defaultProps = {\r\n        currentUser: null,\r\n        text: ''\r\n    };\r\n\r\n    state = { text: '' };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ text: event.target.value });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.text.length > 0) {\r\n            this.props.onCommentAdd(this.state.text);\r\n            this.setState({ text: '' });\r\n        }\r\n    };\r\n\r\n    handleClickDelete = (event) => {\r\n        this.props.onCommentDelete(event.currentTarget.id);\r\n    };\r\n\r\n    render() {\r\n        const { comments, filmId, users, currentUser } = this.props;\r\n        const disabled = isNil(currentUser);\r\n        return (\r\n            <div className={ cn() }>\r\n                <h2 className={ cn('title') }>Комментарии</h2>\r\n                <form onSubmit={ this.handleSubmit } className={ cn('form') }>\r\n                    <textarea id=\"commentsText\" disabled={ disabled } onChange={ this.handleChange } placeholder=\"Введите комментарий...\" className={ cn('textarea', { disabled: disabled }) } value={ this.state.text }>{ this.state.text }</textarea>\r\n                    <button disabled={ disabled} className={ cn('btn-publish', { disabled: disabled }) } type=\"submit\">Опубликовать</button>\r\n                </form>\r\n                <section className={ cn('list') }>\r\n                    {\r\n                        comments.map((item) => item.filmId == filmId &&\r\n                            <article className={cn('item')} key={ item.id }>\r\n                                {\r\n                                    item.userId === currentUser ? (<button onClick={ this.handleClickDelete } className={cn('btn-close')} id={ item.id } type=\"button\">\r\n                                        <Icon\r\n                                            name=\"close\"\r\n                                            width=\"15px\"\r\n                                            height=\"15px\"\r\n                                            className={ cn('ico-close') }\r\n                                        />\r\n                                    </button>) : null\r\n                                }\r\n                                <div className={cn('name')}>{ users[item.userId].name }</div>\r\n                                <p className={cn('text')}>{ item.text }</p>\r\n                            </article>\r\n                        )\r\n                    }\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Comments;","D:\\web\\htc\\src\\components\\modal-login\\modal-login.jsx",[],"D:\\web\\htc\\src\\store\\actions\\index.js",[],"D:\\web\\htc\\src\\constants\\actions.js",[],"D:\\web\\htc\\src\\constants\\locale\\ru.js",[],"D:\\web\\htc\\src\\components\\page-genre\\page-genre.jsx",["148"],"import React from 'react';\r\nimport PropType from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { block } from 'bem-cn';\r\nimport { Link } from \"react-router-dom\";\r\nimport { SliderCarusel } from \"../../lib/slider/slider\";\r\nimport '../../lib/slider/slider.scss';\r\n\r\nconst cn = block('slider-films-new');\r\nclass PageGenre extends React.Component {\r\n    static propTypes = {\r\n        films: PropType.arrayOf(PropType.object).isRequired,\r\n        filmsGenre: PropType.arrayOf(PropType.object).isRequired,\r\n        match: PropType.object\r\n    };\r\n\r\n    componentDidMount() {\r\n        new SliderCarusel(\"js-slider-content-genre\", \"js-slider-genre\", \"slider-films-new__item\");\r\n    }\r\n\r\n    render() {\r\n        const { films, match, filmsGenre } = this.props;\r\n        const idGet = match.params.id;\r\n        const resGenre = films.filter(item => item.genreId == idGet);\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"page-main\">\r\n                    <div className=\"tabs-content\">\r\n                        <div className=\"tabs-films\">\r\n                            <h2 className=\"tabs-films__title\">{ filmsGenre[idGet].title }</h2>\r\n                            <div id=\"js-slider-genre\" className='slider-carusel'>\r\n                                <div className='slider-conteiner'>\r\n                                    <div id=\"js-slider-content-genre\" className='slider-content'>\r\n                                        {\r\n                                            resGenre.map((item, index) =>\r\n                                                <Link className={ cn('item') } to={ `/detail/${ item.id }` } key={ index }>\r\n                                                    <div className={ cn('image') } style={ {backgroundImage: 'url(' + item.img + ')'} }>\r\n                                                        <div className={ cn('desc-wrap') }>\r\n                                                            <div className={ cn('desc-text') }>\r\n                                                                { item.description }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className={ cn('title') }>{ item.title }</div>\r\n                                                </Link>)\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { films: state.films, filmsGenre: state.filmsGenre };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PageGenre);","D:\\web\\htc\\src\\components\\login\\login.jsx",[],{"ruleId":"149","severity":1,"message":"150","line":9,"column":9,"nodeType":"151","messageId":"152","endLine":9,"endColumn":20},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":10,"column":1,"nodeType":"159","endLine":77,"endColumn":2},{"ruleId":"160","severity":1,"message":"161","line":29,"column":37,"nodeType":"162","messageId":"163","endLine":29,"endColumn":39},{"ruleId":"160","severity":1,"message":"161","line":63,"column":31,"nodeType":"162","messageId":"163","endLine":63,"endColumn":33},{"ruleId":"164","severity":1,"message":"165","line":21,"column":53,"nodeType":"166","endLine":21,"endColumn":68},{"ruleId":"167","severity":1,"message":"168","line":24,"column":25,"nodeType":"169","endLine":27,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":16,"column":5,"nodeType":"172","messageId":"173","endLine":18,"endColumn":6},{"ruleId":"170","severity":1,"message":"171","line":14,"column":5,"nodeType":"172","messageId":"173","endLine":16,"endColumn":6},{"ruleId":"174","severity":1,"message":"175","line":76,"column":20,"nodeType":"176","messageId":"177","endLine":76,"endColumn":22},{"ruleId":"174","severity":1,"message":"175","line":80,"column":20,"nodeType":"176","messageId":"177","endLine":80,"endColumn":22},{"ruleId":"170","severity":1,"message":"171","line":14,"column":5,"nodeType":"172","messageId":"173","endLine":16,"endColumn":6},{"ruleId":"160","severity":1,"message":"161","line":18,"column":43,"nodeType":"162","messageId":"163","endLine":18,"endColumn":45},{"ruleId":"160","severity":1,"message":"161","line":108,"column":43,"nodeType":"162","messageId":"163","endLine":108,"endColumn":45},{"ruleId":"174","severity":1,"message":"175","line":61,"column":60,"nodeType":"176","messageId":"177","endLine":61,"endColumn":62},{"ruleId":"174","severity":1,"message":"175","line":24,"column":60,"nodeType":"176","messageId":"177","endLine":24,"endColumn":62},"no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","no-native-reassign",["178"],"no-negated-in-lhs",["179"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]